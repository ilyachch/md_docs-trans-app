name: Testing

on:
  pull_request:
    branches: master


jobs:
  test_pr:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Getting code
        uses: actions/checkout@master
      - name: Getting Python
        uses: actions/setup-python@master
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-pip-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Getting Poetry
        uses: dschep/install-poetry-action@v1.3
      - name: Config Poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      - name: Installing dependencies
        run: poetry install --no-root
      - name: Running tests
        run: make coverage_run
#      - name: Running coverage check
#        run: make coverage_cmd_report
      - name: Running codestyle checks
        run: make check_black
      - name: Running types checks
        run: make check_mypy
      - name: Generate coverage report
        run: make coverage_xml_report
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: pull_requests
      - name: Check if pyproject is changed
        uses: technote-space/get-diff-action@v1
        id: pyproject_is_changed
        with:
          SUFFIX_FILTER: .toml
      - name: Check if python files are changed
        uses: technote-space/get-diff-action@v1
        id: python_files_are_changed
        with:
          PREFIX_FILTER: django_partisan
      - name: Fail if pyproject is not changed and files are changed
        if: ${{ steps.pyproject_is_changed.outputs.count != 1 && steps.python_files_are_changed.outputs.count == 1 }}
        run: exit 1

